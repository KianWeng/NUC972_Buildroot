# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
noinst_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@MGRM_PROCESSES_TRUE@am__EXEEXT_1 = scrnsaver$(EXEEXT) mginit$(EXEEXT)
am__EXEEXT_2 = scrnsaver$(EXEEXT) helloworld$(EXEEXT) \
	mycontrol$(EXEEXT) dialogbox$(EXEEXT) simplekey$(EXEEXT) \
	static$(EXEEXT) button$(EXEEXT) combobox$(EXEEXT) \
	edit$(EXEEXT) listbox$(EXEEXT) menubutton$(EXEEXT) \
	progressbar$(EXEEXT) trackbar$(EXEEXT) newtoolbar$(EXEEXT) \
	propsheet$(EXEEXT) palette$(EXEEXT) palette_ex$(EXEEXT) \
	flame$(EXEEXT) scrollbar$(EXEEXT) scrollbar_ctrl$(EXEEXT) \
	painter$(EXEEXT) capture$(EXEEXT) bitblt$(EXEEXT) \
	stretchblt$(EXEEXT) loadbmp$(EXEEXT) drawicon$(EXEEXT) \
	createicon$(EXEEXT) caretdemo$(EXEEXT) cursordemo$(EXEEXT) \
	input$(EXEEXT) bmpbkgnd$(EXEEXT) fminigui$(EXEEXT) \
	scrollwnd$(EXEEXT) scrollwnd2$(EXEEXT) scrollview$(EXEEXT) \
	animation$(EXEEXT) iconview$(EXEEXT) gridview$(EXEEXT) \
	gridview_ext$(EXEEXT) timeeditor$(EXEEXT) listview$(EXEEXT) \
	spinbox$(EXEEXT) monthcal$(EXEEXT) coolbar$(EXEEXT) \
	treeview$(EXEEXT) nr_window$(EXEEXT) scalerbmp$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am__objects_1 = custom_minigui.$(OBJEXT)
am_animation_OBJECTS = animation.$(OBJEXT) $(am__objects_1)
animation_OBJECTS = $(am_animation_OBJECTS)
animation_LDADD = $(LDADD)
am_bitblt_OBJECTS = bitblt.$(OBJEXT) $(am__objects_1)
bitblt_OBJECTS = $(am_bitblt_OBJECTS)
bitblt_LDADD = $(LDADD)
am_bmpbkgnd_OBJECTS = bmpbkgnd.$(OBJEXT) $(am__objects_1)
bmpbkgnd_OBJECTS = $(am_bmpbkgnd_OBJECTS)
bmpbkgnd_LDADD = $(LDADD)
am_button_OBJECTS = button.$(OBJEXT) $(am__objects_1)
button_OBJECTS = $(am_button_OBJECTS)
button_LDADD = $(LDADD)
am_capture_OBJECTS = capture.$(OBJEXT) $(am__objects_1)
capture_OBJECTS = $(am_capture_OBJECTS)
capture_LDADD = $(LDADD)
am_caretdemo_OBJECTS = caretdemo.$(OBJEXT) $(am__objects_1)
caretdemo_OBJECTS = $(am_caretdemo_OBJECTS)
caretdemo_LDADD = $(LDADD)
am_combobox_OBJECTS = combobox.$(OBJEXT) $(am__objects_1)
combobox_OBJECTS = $(am_combobox_OBJECTS)
combobox_LDADD = $(LDADD)
am_coolbar_OBJECTS = coolbar.$(OBJEXT) $(am__objects_1)
coolbar_OBJECTS = $(am_coolbar_OBJECTS)
coolbar_LDADD = $(LDADD)
am_createicon_OBJECTS = createicon.$(OBJEXT) $(am__objects_1)
createicon_OBJECTS = $(am_createicon_OBJECTS)
createicon_LDADD = $(LDADD)
am_cursordemo_OBJECTS = cursordemo.$(OBJEXT) $(am__objects_1)
cursordemo_OBJECTS = $(am_cursordemo_OBJECTS)
cursordemo_LDADD = $(LDADD)
am_dialogbox_OBJECTS = dialogbox.$(OBJEXT) $(am__objects_1)
dialogbox_OBJECTS = $(am_dialogbox_OBJECTS)
dialogbox_LDADD = $(LDADD)
am_drawicon_OBJECTS = drawicon.$(OBJEXT) $(am__objects_1)
drawicon_OBJECTS = $(am_drawicon_OBJECTS)
drawicon_LDADD = $(LDADD)
am_edit_OBJECTS = edit.$(OBJEXT) $(am__objects_1)
edit_OBJECTS = $(am_edit_OBJECTS)
edit_LDADD = $(LDADD)
am_flame_OBJECTS = flame.$(OBJEXT) $(am__objects_1)
flame_OBJECTS = $(am_flame_OBJECTS)
flame_LDADD = $(LDADD)
am_fminigui_OBJECTS = fminigui.$(OBJEXT) $(am__objects_1)
fminigui_OBJECTS = $(am_fminigui_OBJECTS)
fminigui_LDADD = $(LDADD)
am_gridview_OBJECTS = gridview.$(OBJEXT) $(am__objects_1)
gridview_OBJECTS = $(am_gridview_OBJECTS)
gridview_LDADD = $(LDADD)
am_gridview_ext_OBJECTS = gridview_ext.$(OBJEXT) $(am__objects_1)
gridview_ext_OBJECTS = $(am_gridview_ext_OBJECTS)
gridview_ext_LDADD = $(LDADD)
am_helloworld_OBJECTS = helloworld.$(OBJEXT) $(am__objects_1)
helloworld_OBJECTS = $(am_helloworld_OBJECTS)
helloworld_LDADD = $(LDADD)
am_iconview_OBJECTS = iconview.$(OBJEXT) $(am__objects_1)
iconview_OBJECTS = $(am_iconview_OBJECTS)
iconview_LDADD = $(LDADD)
am_input_OBJECTS = input.$(OBJEXT) $(am__objects_1)
input_OBJECTS = $(am_input_OBJECTS)
input_LDADD = $(LDADD)
am_listbox_OBJECTS = listbox.$(OBJEXT) $(am__objects_1)
listbox_OBJECTS = $(am_listbox_OBJECTS)
listbox_LDADD = $(LDADD)
am_listview_OBJECTS = listview.$(OBJEXT) $(am__objects_1)
listview_OBJECTS = $(am_listview_OBJECTS)
listview_LDADD = $(LDADD)
am_loadbmp_OBJECTS = loadbmp.$(OBJEXT) $(am__objects_1)
loadbmp_OBJECTS = $(am_loadbmp_OBJECTS)
loadbmp_LDADD = $(LDADD)
am_menubutton_OBJECTS = menubutton.$(OBJEXT) $(am__objects_1)
menubutton_OBJECTS = $(am_menubutton_OBJECTS)
menubutton_LDADD = $(LDADD)
am_mginit_OBJECTS = mginit.$(OBJEXT) $(am__objects_1)
mginit_OBJECTS = $(am_mginit_OBJECTS)
mginit_LDADD = $(LDADD)
am_monthcal_OBJECTS = monthcal.$(OBJEXT) $(am__objects_1)
monthcal_OBJECTS = $(am_monthcal_OBJECTS)
monthcal_LDADD = $(LDADD)
am_mycontrol_OBJECTS = mycontrol.$(OBJEXT) $(am__objects_1)
mycontrol_OBJECTS = $(am_mycontrol_OBJECTS)
mycontrol_LDADD = $(LDADD)
am_newtoolbar_OBJECTS = newtoolbar.$(OBJEXT) $(am__objects_1)
newtoolbar_OBJECTS = $(am_newtoolbar_OBJECTS)
newtoolbar_LDADD = $(LDADD)
am_nr_window_OBJECTS = nr_window.$(OBJEXT) $(am__objects_1)
nr_window_OBJECTS = $(am_nr_window_OBJECTS)
nr_window_LDADD = $(LDADD)
am_painter_OBJECTS = painter.$(OBJEXT) $(am__objects_1)
painter_OBJECTS = $(am_painter_OBJECTS)
painter_LDADD = $(LDADD)
am_palette_OBJECTS = palette.$(OBJEXT) $(am__objects_1)
palette_OBJECTS = $(am_palette_OBJECTS)
palette_LDADD = $(LDADD)
am_palette_ex_OBJECTS = palette_ex.$(OBJEXT) $(am__objects_1)
palette_ex_OBJECTS = $(am_palette_ex_OBJECTS)
palette_ex_LDADD = $(LDADD)
am_progressbar_OBJECTS = progressbar.$(OBJEXT) $(am__objects_1)
progressbar_OBJECTS = $(am_progressbar_OBJECTS)
progressbar_LDADD = $(LDADD)
am_propsheet_OBJECTS = propsheet.$(OBJEXT) $(am__objects_1)
propsheet_OBJECTS = $(am_propsheet_OBJECTS)
propsheet_LDADD = $(LDADD)
am_scalerbmp_OBJECTS = scalerbmp.$(OBJEXT) $(am__objects_1)
scalerbmp_OBJECTS = $(am_scalerbmp_OBJECTS)
scalerbmp_LDADD = $(LDADD)
am_scrnsaver_OBJECTS = scrnsaver.$(OBJEXT) $(am__objects_1)
scrnsaver_OBJECTS = $(am_scrnsaver_OBJECTS)
scrnsaver_LDADD = $(LDADD)
am_scrollbar_OBJECTS = scrollbar.$(OBJEXT) $(am__objects_1)
scrollbar_OBJECTS = $(am_scrollbar_OBJECTS)
scrollbar_LDADD = $(LDADD)
am_scrollbar_ctrl_OBJECTS = scrollbar_ctrl.$(OBJEXT) $(am__objects_1)
scrollbar_ctrl_OBJECTS = $(am_scrollbar_ctrl_OBJECTS)
scrollbar_ctrl_LDADD = $(LDADD)
am_scrollview_OBJECTS = scrollview.$(OBJEXT) $(am__objects_1)
scrollview_OBJECTS = $(am_scrollview_OBJECTS)
scrollview_LDADD = $(LDADD)
am_scrollwnd_OBJECTS = scrollwnd.$(OBJEXT) $(am__objects_1)
scrollwnd_OBJECTS = $(am_scrollwnd_OBJECTS)
scrollwnd_LDADD = $(LDADD)
am_scrollwnd2_OBJECTS = scrollwnd2.$(OBJEXT) $(am__objects_1)
scrollwnd2_OBJECTS = $(am_scrollwnd2_OBJECTS)
scrollwnd2_LDADD = $(LDADD)
am_simplekey_OBJECTS = simplekey.$(OBJEXT) $(am__objects_1)
simplekey_OBJECTS = $(am_simplekey_OBJECTS)
simplekey_LDADD = $(LDADD)
am_spinbox_OBJECTS = spinbox.$(OBJEXT) $(am__objects_1)
spinbox_OBJECTS = $(am_spinbox_OBJECTS)
spinbox_LDADD = $(LDADD)
am_static_OBJECTS = static.$(OBJEXT) $(am__objects_1)
static_OBJECTS = $(am_static_OBJECTS)
static_LDADD = $(LDADD)
am_stretchblt_OBJECTS = stretchblt.$(OBJEXT) $(am__objects_1)
stretchblt_OBJECTS = $(am_stretchblt_OBJECTS)
stretchblt_LDADD = $(LDADD)
am_timeeditor_OBJECTS = timeeditor.$(OBJEXT) $(am__objects_1)
timeeditor_OBJECTS = $(am_timeeditor_OBJECTS)
timeeditor_LDADD = $(LDADD)
am_trackbar_OBJECTS = trackbar.$(OBJEXT) $(am__objects_1)
trackbar_OBJECTS = $(am_trackbar_OBJECTS)
trackbar_LDADD = $(LDADD)
am_treeview_OBJECTS = treeview.$(OBJEXT) $(am__objects_1)
treeview_OBJECTS = $(am_treeview_OBJECTS)
treeview_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(animation_SOURCES) $(bitblt_SOURCES) $(bmpbkgnd_SOURCES) \
	$(button_SOURCES) $(capture_SOURCES) $(caretdemo_SOURCES) \
	$(combobox_SOURCES) $(coolbar_SOURCES) $(createicon_SOURCES) \
	$(cursordemo_SOURCES) $(dialogbox_SOURCES) $(drawicon_SOURCES) \
	$(edit_SOURCES) $(flame_SOURCES) $(fminigui_SOURCES) \
	$(gridview_SOURCES) $(gridview_ext_SOURCES) \
	$(helloworld_SOURCES) $(iconview_SOURCES) $(input_SOURCES) \
	$(listbox_SOURCES) $(listview_SOURCES) $(loadbmp_SOURCES) \
	$(menubutton_SOURCES) $(mginit_SOURCES) $(monthcal_SOURCES) \
	$(mycontrol_SOURCES) $(newtoolbar_SOURCES) \
	$(nr_window_SOURCES) $(painter_SOURCES) $(palette_SOURCES) \
	$(palette_ex_SOURCES) $(progressbar_SOURCES) \
	$(propsheet_SOURCES) $(scalerbmp_SOURCES) $(scrnsaver_SOURCES) \
	$(scrollbar_SOURCES) $(scrollbar_ctrl_SOURCES) \
	$(scrollview_SOURCES) $(scrollwnd_SOURCES) \
	$(scrollwnd2_SOURCES) $(simplekey_SOURCES) $(spinbox_SOURCES) \
	$(static_SOURCES) $(stretchblt_SOURCES) $(timeeditor_SOURCES) \
	$(trackbar_SOURCES) $(treeview_SOURCES)
DIST_SOURCES = $(animation_SOURCES) $(bitblt_SOURCES) \
	$(bmpbkgnd_SOURCES) $(button_SOURCES) $(capture_SOURCES) \
	$(caretdemo_SOURCES) $(combobox_SOURCES) $(coolbar_SOURCES) \
	$(createicon_SOURCES) $(cursordemo_SOURCES) \
	$(dialogbox_SOURCES) $(drawicon_SOURCES) $(edit_SOURCES) \
	$(flame_SOURCES) $(fminigui_SOURCES) $(gridview_SOURCES) \
	$(gridview_ext_SOURCES) $(helloworld_SOURCES) \
	$(iconview_SOURCES) $(input_SOURCES) $(listbox_SOURCES) \
	$(listview_SOURCES) $(loadbmp_SOURCES) $(menubutton_SOURCES) \
	$(mginit_SOURCES) $(monthcal_SOURCES) $(mycontrol_SOURCES) \
	$(newtoolbar_SOURCES) $(nr_window_SOURCES) $(painter_SOURCES) \
	$(palette_SOURCES) $(palette_ex_SOURCES) \
	$(progressbar_SOURCES) $(propsheet_SOURCES) \
	$(scalerbmp_SOURCES) $(scrnsaver_SOURCES) $(scrollbar_SOURCES) \
	$(scrollbar_ctrl_SOURCES) $(scrollview_SOURCES) \
	$(scrollwnd_SOURCES) $(scrollwnd2_SOURCES) \
	$(simplekey_SOURCES) $(spinbox_SOURCES) $(static_SOURCES) \
	$(stretchblt_SOURCES) $(timeeditor_SOURCES) \
	$(trackbar_SOURCES) $(treeview_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MINIGUI_CFLAGS = @MINIGUI_CFLAGS@
MINIGUI_LIBS = @MINIGUI_LIBS@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
COMMON_PROGS = scrnsaver helloworld mycontrol dialogbox simplekey \
                static button combobox edit listbox menubutton progressbar \
				trackbar newtoolbar propsheet palette palette_ex flame \
                scrollbar scrollbar_ctrl painter capture bitblt stretchblt loadbmp drawicon \
                createicon caretdemo cursordemo input bmpbkgnd fminigui \
                scrollwnd scrollwnd2 scrollview animation iconview gridview \
				gridview_ext \
                timeeditor listview spinbox monthcal coolbar treeview \
				nr_window scalerbmp

@MGRM_PROCESSES_FALSE@LITE_PROGS = 
@MGRM_PROCESSES_TRUE@LITE_PROGS = scrnsaver mginit
CUSTOMMG_SRC = custom_minigui.c
scrnsaver_SOURCES = scrnsaver.c scrnsaver_res_en.h scrnsaver_res_cn.h \
									scrnsaver_res_tw.h $(CUSTOMMG_SRC)

helloworld_SOURCES = helloworld.c helloworld_res_en.h helloworld_res_cn.h \
				   helloworld_res_tw.h $(CUSTOMMG_SRC)

mycontrol_SOURCES = mycontrol.c $(CUSTOMMG_SRC)
dialogbox_SOURCES = dialogbox.c dialogbox_rec_en.h dialogbox_rec_cn.h \
				  dialogbox_rec_tw.h $(CUSTOMMG_SRC)

input_SOURCES = input.c input_res_en.h input_res_cn.h \
			  input_res_tw.h $(CUSTOMMG_SRC)

edit_SOURCES = edit.c edit_res_en.h edit_res_cn.h \
			 edit_res_tw.h $(CUSTOMMG_SRC)

listbox_SOURCES = listbox.c listbox_res_en.h listbox_res_cn.h \
				listbox_res_tw.h $(CUSTOMMG_SRC)

bmpbkgnd_SOURCES = bmpbkgnd.c bmpbkgnd_res_en.h bmpbkgnd_res_cn.h \
				 bmpbkgnd_res_tw.h $(CUSTOMMG_SRC)

fminigui_SOURCES = fminigui.c fminigui_res_en.h fminigui_res_cn.h \
				 fminigui_res_tw.h $(CUSTOMMG_SRC)

bitblt_SOURCES = bitblt.c bitblt_res_en.h bitblt_res_cn.h \
			   bitblt_res_tw.h $(CUSTOMMG_SRC)

stretchblt_SOURCES = stretchblt.c stretchblt_res_en.h stretchblt_res_cn.h \
				   stretchblt_res_tw.h $(CUSTOMMG_SRC)

loadbmp_SOURCES = loadbmp.c loadbmp_res_en.h loadbmp_res_cn.h \
				loadbmp_res_tw.h $(CUSTOMMG_SRC)

caretdemo_SOURCES = caretdemo.c caretdemo_res_en.h caretdemo_res_cn.h \
				  caretdemo_res_tw.h $(CUSTOMMG_SRC)

cursordemo_SOURCES = cursordemo.c cursordemo_res_en.h cursordemo_res_cn.h \
				   cursordemo_res_tw.h $(CUSTOMMG_SRC)

createicon_SOURCES = createicon.c createicon_res_en.h createicon_res_cn.h \
				   createicon_res_tw.h $(CUSTOMMG_SRC)

drawicon_SOURCES = drawicon.c drawicon_res_en.h drawicon_res_cn.h \
				 drawicon_res_tw.h $(CUSTOMMG_SRC)

simplekey_SOURCES = simplekey.c simplekey_res_en.h simplekey_res_cn.h \
				  simplekey_res_tw.h $(CUSTOMMG_SRC)

capture_SOURCES = capture.c capture_res_en.h capture_res_cn.h \
				capture_res_tw.h $(CUSTOMMG_SRC)

painter_SOURCES = painter.c painter_res_en.h painter_res_cn.h \
				painter_res_tw.h $(CUSTOMMG_SRC)

scrollbar_SOURCES = scrollbar.c scrollbar_res_en.h scrollbar_res_cn.h \
				  scrollbar_res_tw.h $(CUSTOMMG_SRC)

scrollbar_ctrl_SOURCES = scrollbar_ctrl.c scrollbar_ctrl_res_en.h scrollbar_ctrl_res_cn.h \
				  scrollbar_ctrl_res_tw.h $(CUSTOMMG_SRC)

static_SOURCES = static.c static_res_en.h static_res_cn.h \
			   static_res_tw.h $(CUSTOMMG_SRC)

button_SOURCES = button.c button_rec_en.h button_rec_cn.h \
			   button_rec_tw.h $(CUSTOMMG_SRC)

combobox_SOURCES = combobox.c combobox_res_en.h combobox_res_cn.h \
				 combobox_res_tw.h $(CUSTOMMG_SRC)

menubutton_SOURCES = menubutton.c menubutton_res_en.h menubutton_res_cn.h \
				   menubutton_res_tw.h $(CUSTOMMG_SRC)

progressbar_SOURCES = progressbar.c progressbar_res_en.h progressbar_res_cn.h \
					progressbar_res_tw.h $(CUSTOMMG_SRC)

trackbar_SOURCES = trackbar.c trackbar_res_en.h trackbar_res_cn.h \
				 trackbar_res_tw.h $(CUSTOMMG_SRC)

newtoolbar_SOURCES = newtoolbar.c newtoolbar_res_en.h newtoolbar_res_cn.h \
				   newtoolbar_res_tw.h $(CUSTOMMG_SRC)

propsheet_SOURCES = propsheet.c propsheet_res_en.h propsheet_res_cn.h \
				  propsheet_res_tw.h $(CUSTOMMG_SRC)

listview_SOURCES = listview.c listview_res_en.h listview_res_cn.h \
				 listview_res_tw.h $(CUSTOMMG_SRC)

spinbox_SOURCES = spinbox.c spinbox_res_en.h spinbox_res_cn.h \
				spinbox_res_tw.h $(CUSTOMMG_SRC)

monthcal_SOURCES = monthcal.c monthcal_res_en.h monthcal_res_cn.h \
				 monthcal_res_tw.h $(CUSTOMMG_SRC)

coolbar_SOURCES = coolbar.c coolbar_res_en.h coolbar_res_cn.h \
				coolbar_res_tw.h $(CUSTOMMG_SRC)

timeeditor_SOURCES = timeeditor.c timeeditor_res_en.h timeeditor_res_cn.h \
				   timeeditor_res_tw.h $(CUSTOMMG_SRC)

treeview_SOURCES = treeview.c treeview_res_en.h treeview_res_cn.h \
				 treeview_res_tw.h $(CUSTOMMG_SRC)

scrollwnd_SOURCES = scrollwnd.c scrollwnd_res_en.h scrollwnd_res_cn.h \
				  scrollwnd_res_tw.h $(CUSTOMMG_SRC)

scrollwnd2_SOURCES = scrollwnd2.c scrollwnd2_res_en.h scrollwnd2_res_cn.h \
				   scrollwnd2_res_tw.h $(CUSTOMMG_SRC)

scrollview_SOURCES = scrollview.c scrollview_res_en.h scrollview_res_cn.h \
				   scrollview_res_tw.h $(CUSTOMMG_SRC)

iconview_SOURCES = iconview.c iconview_res_en.h iconview_res_cn.h \
				 iconview_res_tw.h $(CUSTOMMG_SRC)

gridview_SOURCES = gridview.c gridview_res_en.h gridview_res_cn.h \
				 gridview_res_tw.h $(CUSTOMMG_SRC)

gridview_ext_SOURCES = gridview_ext.c gridview_ext_res_en.h gridview_ext_res_cn.h \
					 gridview_ext_res_tw.h $(CUSTOMMG_SRC)

animation_SOURCES = animation.c animation_res_en.h animation_res_cn.h \
				  animation_res_tw.h $(CUSTOMMG_SRC)

nr_window_SOURCES = nr_window.c $(CUSTOMMG_SRC)
scalerbmp_SOURCES = scalerbmp.c loadbmp_res_en.h loadbmp_res_cn.h \
				loadbmp_res_tw.h $(CUSTOMMG_SRC)

palette_SOURCES = palette.c $(CUSTOMMG_SRC)
palette_ex_SOURCES = palette_ex.c $(CUSTOMMG_SRC)
flame_SOURCES = flame.c $(CUSTOMMG_SRC)
mginit_SOURCES = mginit.c $(CUSTOMMG_SRC)

#textedit_SOURCES=textedit.c $(CUSTOMMG_SRC)
#scrolltest_SOURCES=scrolltest.c $(CUSTOMMG_SRC)
SUBDIRS = res
EXTRA_DIST = myicon.ico question.ico 
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
animation$(EXEEXT): $(animation_OBJECTS) $(animation_DEPENDENCIES) 
	@rm -f animation$(EXEEXT)
	$(LINK) $(animation_OBJECTS) $(animation_LDADD) $(LIBS)
bitblt$(EXEEXT): $(bitblt_OBJECTS) $(bitblt_DEPENDENCIES) 
	@rm -f bitblt$(EXEEXT)
	$(LINK) $(bitblt_OBJECTS) $(bitblt_LDADD) $(LIBS)
bmpbkgnd$(EXEEXT): $(bmpbkgnd_OBJECTS) $(bmpbkgnd_DEPENDENCIES) 
	@rm -f bmpbkgnd$(EXEEXT)
	$(LINK) $(bmpbkgnd_OBJECTS) $(bmpbkgnd_LDADD) $(LIBS)
button$(EXEEXT): $(button_OBJECTS) $(button_DEPENDENCIES) 
	@rm -f button$(EXEEXT)
	$(LINK) $(button_OBJECTS) $(button_LDADD) $(LIBS)
capture$(EXEEXT): $(capture_OBJECTS) $(capture_DEPENDENCIES) 
	@rm -f capture$(EXEEXT)
	$(LINK) $(capture_OBJECTS) $(capture_LDADD) $(LIBS)
caretdemo$(EXEEXT): $(caretdemo_OBJECTS) $(caretdemo_DEPENDENCIES) 
	@rm -f caretdemo$(EXEEXT)
	$(LINK) $(caretdemo_OBJECTS) $(caretdemo_LDADD) $(LIBS)
combobox$(EXEEXT): $(combobox_OBJECTS) $(combobox_DEPENDENCIES) 
	@rm -f combobox$(EXEEXT)
	$(LINK) $(combobox_OBJECTS) $(combobox_LDADD) $(LIBS)
coolbar$(EXEEXT): $(coolbar_OBJECTS) $(coolbar_DEPENDENCIES) 
	@rm -f coolbar$(EXEEXT)
	$(LINK) $(coolbar_OBJECTS) $(coolbar_LDADD) $(LIBS)
createicon$(EXEEXT): $(createicon_OBJECTS) $(createicon_DEPENDENCIES) 
	@rm -f createicon$(EXEEXT)
	$(LINK) $(createicon_OBJECTS) $(createicon_LDADD) $(LIBS)
cursordemo$(EXEEXT): $(cursordemo_OBJECTS) $(cursordemo_DEPENDENCIES) 
	@rm -f cursordemo$(EXEEXT)
	$(LINK) $(cursordemo_OBJECTS) $(cursordemo_LDADD) $(LIBS)
dialogbox$(EXEEXT): $(dialogbox_OBJECTS) $(dialogbox_DEPENDENCIES) 
	@rm -f dialogbox$(EXEEXT)
	$(LINK) $(dialogbox_OBJECTS) $(dialogbox_LDADD) $(LIBS)
drawicon$(EXEEXT): $(drawicon_OBJECTS) $(drawicon_DEPENDENCIES) 
	@rm -f drawicon$(EXEEXT)
	$(LINK) $(drawicon_OBJECTS) $(drawicon_LDADD) $(LIBS)
edit$(EXEEXT): $(edit_OBJECTS) $(edit_DEPENDENCIES) 
	@rm -f edit$(EXEEXT)
	$(LINK) $(edit_OBJECTS) $(edit_LDADD) $(LIBS)
flame$(EXEEXT): $(flame_OBJECTS) $(flame_DEPENDENCIES) 
	@rm -f flame$(EXEEXT)
	$(LINK) $(flame_OBJECTS) $(flame_LDADD) $(LIBS)
fminigui$(EXEEXT): $(fminigui_OBJECTS) $(fminigui_DEPENDENCIES) 
	@rm -f fminigui$(EXEEXT)
	$(LINK) $(fminigui_OBJECTS) $(fminigui_LDADD) $(LIBS)
gridview$(EXEEXT): $(gridview_OBJECTS) $(gridview_DEPENDENCIES) 
	@rm -f gridview$(EXEEXT)
	$(LINK) $(gridview_OBJECTS) $(gridview_LDADD) $(LIBS)
gridview_ext$(EXEEXT): $(gridview_ext_OBJECTS) $(gridview_ext_DEPENDENCIES) 
	@rm -f gridview_ext$(EXEEXT)
	$(LINK) $(gridview_ext_OBJECTS) $(gridview_ext_LDADD) $(LIBS)
helloworld$(EXEEXT): $(helloworld_OBJECTS) $(helloworld_DEPENDENCIES) 
	@rm -f helloworld$(EXEEXT)
	$(LINK) $(helloworld_OBJECTS) $(helloworld_LDADD) $(LIBS)
iconview$(EXEEXT): $(iconview_OBJECTS) $(iconview_DEPENDENCIES) 
	@rm -f iconview$(EXEEXT)
	$(LINK) $(iconview_OBJECTS) $(iconview_LDADD) $(LIBS)
input$(EXEEXT): $(input_OBJECTS) $(input_DEPENDENCIES) 
	@rm -f input$(EXEEXT)
	$(LINK) $(input_OBJECTS) $(input_LDADD) $(LIBS)
listbox$(EXEEXT): $(listbox_OBJECTS) $(listbox_DEPENDENCIES) 
	@rm -f listbox$(EXEEXT)
	$(LINK) $(listbox_OBJECTS) $(listbox_LDADD) $(LIBS)
listview$(EXEEXT): $(listview_OBJECTS) $(listview_DEPENDENCIES) 
	@rm -f listview$(EXEEXT)
	$(LINK) $(listview_OBJECTS) $(listview_LDADD) $(LIBS)
loadbmp$(EXEEXT): $(loadbmp_OBJECTS) $(loadbmp_DEPENDENCIES) 
	@rm -f loadbmp$(EXEEXT)
	$(LINK) $(loadbmp_OBJECTS) $(loadbmp_LDADD) $(LIBS)
menubutton$(EXEEXT): $(menubutton_OBJECTS) $(menubutton_DEPENDENCIES) 
	@rm -f menubutton$(EXEEXT)
	$(LINK) $(menubutton_OBJECTS) $(menubutton_LDADD) $(LIBS)
mginit$(EXEEXT): $(mginit_OBJECTS) $(mginit_DEPENDENCIES) 
	@rm -f mginit$(EXEEXT)
	$(LINK) $(mginit_OBJECTS) $(mginit_LDADD) $(LIBS)
monthcal$(EXEEXT): $(monthcal_OBJECTS) $(monthcal_DEPENDENCIES) 
	@rm -f monthcal$(EXEEXT)
	$(LINK) $(monthcal_OBJECTS) $(monthcal_LDADD) $(LIBS)
mycontrol$(EXEEXT): $(mycontrol_OBJECTS) $(mycontrol_DEPENDENCIES) 
	@rm -f mycontrol$(EXEEXT)
	$(LINK) $(mycontrol_OBJECTS) $(mycontrol_LDADD) $(LIBS)
newtoolbar$(EXEEXT): $(newtoolbar_OBJECTS) $(newtoolbar_DEPENDENCIES) 
	@rm -f newtoolbar$(EXEEXT)
	$(LINK) $(newtoolbar_OBJECTS) $(newtoolbar_LDADD) $(LIBS)
nr_window$(EXEEXT): $(nr_window_OBJECTS) $(nr_window_DEPENDENCIES) 
	@rm -f nr_window$(EXEEXT)
	$(LINK) $(nr_window_OBJECTS) $(nr_window_LDADD) $(LIBS)
painter$(EXEEXT): $(painter_OBJECTS) $(painter_DEPENDENCIES) 
	@rm -f painter$(EXEEXT)
	$(LINK) $(painter_OBJECTS) $(painter_LDADD) $(LIBS)
palette$(EXEEXT): $(palette_OBJECTS) $(palette_DEPENDENCIES) 
	@rm -f palette$(EXEEXT)
	$(LINK) $(palette_OBJECTS) $(palette_LDADD) $(LIBS)
palette_ex$(EXEEXT): $(palette_ex_OBJECTS) $(palette_ex_DEPENDENCIES) 
	@rm -f palette_ex$(EXEEXT)
	$(LINK) $(palette_ex_OBJECTS) $(palette_ex_LDADD) $(LIBS)
progressbar$(EXEEXT): $(progressbar_OBJECTS) $(progressbar_DEPENDENCIES) 
	@rm -f progressbar$(EXEEXT)
	$(LINK) $(progressbar_OBJECTS) $(progressbar_LDADD) $(LIBS)
propsheet$(EXEEXT): $(propsheet_OBJECTS) $(propsheet_DEPENDENCIES) 
	@rm -f propsheet$(EXEEXT)
	$(LINK) $(propsheet_OBJECTS) $(propsheet_LDADD) $(LIBS)
scalerbmp$(EXEEXT): $(scalerbmp_OBJECTS) $(scalerbmp_DEPENDENCIES) 
	@rm -f scalerbmp$(EXEEXT)
	$(LINK) $(scalerbmp_OBJECTS) $(scalerbmp_LDADD) $(LIBS)
scrnsaver$(EXEEXT): $(scrnsaver_OBJECTS) $(scrnsaver_DEPENDENCIES) 
	@rm -f scrnsaver$(EXEEXT)
	$(LINK) $(scrnsaver_OBJECTS) $(scrnsaver_LDADD) $(LIBS)
scrollbar$(EXEEXT): $(scrollbar_OBJECTS) $(scrollbar_DEPENDENCIES) 
	@rm -f scrollbar$(EXEEXT)
	$(LINK) $(scrollbar_OBJECTS) $(scrollbar_LDADD) $(LIBS)
scrollbar_ctrl$(EXEEXT): $(scrollbar_ctrl_OBJECTS) $(scrollbar_ctrl_DEPENDENCIES) 
	@rm -f scrollbar_ctrl$(EXEEXT)
	$(LINK) $(scrollbar_ctrl_OBJECTS) $(scrollbar_ctrl_LDADD) $(LIBS)
scrollview$(EXEEXT): $(scrollview_OBJECTS) $(scrollview_DEPENDENCIES) 
	@rm -f scrollview$(EXEEXT)
	$(LINK) $(scrollview_OBJECTS) $(scrollview_LDADD) $(LIBS)
scrollwnd$(EXEEXT): $(scrollwnd_OBJECTS) $(scrollwnd_DEPENDENCIES) 
	@rm -f scrollwnd$(EXEEXT)
	$(LINK) $(scrollwnd_OBJECTS) $(scrollwnd_LDADD) $(LIBS)
scrollwnd2$(EXEEXT): $(scrollwnd2_OBJECTS) $(scrollwnd2_DEPENDENCIES) 
	@rm -f scrollwnd2$(EXEEXT)
	$(LINK) $(scrollwnd2_OBJECTS) $(scrollwnd2_LDADD) $(LIBS)
simplekey$(EXEEXT): $(simplekey_OBJECTS) $(simplekey_DEPENDENCIES) 
	@rm -f simplekey$(EXEEXT)
	$(LINK) $(simplekey_OBJECTS) $(simplekey_LDADD) $(LIBS)
spinbox$(EXEEXT): $(spinbox_OBJECTS) $(spinbox_DEPENDENCIES) 
	@rm -f spinbox$(EXEEXT)
	$(LINK) $(spinbox_OBJECTS) $(spinbox_LDADD) $(LIBS)
static$(EXEEXT): $(static_OBJECTS) $(static_DEPENDENCIES) 
	@rm -f static$(EXEEXT)
	$(LINK) $(static_OBJECTS) $(static_LDADD) $(LIBS)
stretchblt$(EXEEXT): $(stretchblt_OBJECTS) $(stretchblt_DEPENDENCIES) 
	@rm -f stretchblt$(EXEEXT)
	$(LINK) $(stretchblt_OBJECTS) $(stretchblt_LDADD) $(LIBS)
timeeditor$(EXEEXT): $(timeeditor_OBJECTS) $(timeeditor_DEPENDENCIES) 
	@rm -f timeeditor$(EXEEXT)
	$(LINK) $(timeeditor_OBJECTS) $(timeeditor_LDADD) $(LIBS)
trackbar$(EXEEXT): $(trackbar_OBJECTS) $(trackbar_DEPENDENCIES) 
	@rm -f trackbar$(EXEEXT)
	$(LINK) $(trackbar_OBJECTS) $(trackbar_LDADD) $(LIBS)
treeview$(EXEEXT): $(treeview_OBJECTS) $(treeview_DEPENDENCIES) 
	@rm -f treeview$(EXEEXT)
	$(LINK) $(treeview_OBJECTS) $(treeview_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/animation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bitblt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bmpbkgnd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/button.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/capture.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/caretdemo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/combobox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/coolbar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/createicon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cursordemo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/custom_minigui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dialogbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/drawicon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/edit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fminigui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gridview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gridview_ext.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/helloworld.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iconview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/input.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/listbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/listview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/loadbmp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/menubutton.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mginit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/monthcal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mycontrol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/newtoolbar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nr_window.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/painter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/palette.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/palette_ex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/progressbar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/propsheet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scalerbmp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scrnsaver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scrollbar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scrollbar_ctrl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scrollview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scrollwnd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scrollwnd2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/simplekey.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spinbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/static.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stretchblt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timeeditor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trackbar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/treeview.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \
	install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-generic \
	clean-noinstPROGRAMS ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am

# close.png  pause.png  progress-bk.png  stop.png 
# timer.png   volume.png main.png   play.png   progress.png  sysmenu.png  volume-bk.png banner.gif 9.gif

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
